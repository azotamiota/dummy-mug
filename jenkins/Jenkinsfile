pipeline {
    agent any
    environment {
        def myString = "Hello World"
        def myNumber = 10
        def myBool = false
    }
    parameters {
        booleanParam(defaultValue: false, description: "terraform apply?", name: "TF_APPLY")
        string(defaultValue: "DEV", description: "Which environment?", name: "deployEnv")
        choice(choices: ["React", "Flask", "Django"], description: "Which framework?", name: "appFramework")
    }
    stages {
        stage("Clean ups") {
            steps {
                echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"
                echo "myString: ${myString}"
                echo "myNumber: ${myNumber}"
                echo "myBool: ${myBool}"
                echo "terraform apply?: ${params.TF_APPLY}"
                echo "Environment is set to: ${params.deployEnv}"
                echo "App framework: ${params.appFramework}"
                echo "Build number is: ${env.BUILD_NUMBER}"
                deleteDir()
            }
        }
        // stage('Clone repo') {
        //     steps {
        //         withCredentials([usernamePassword(credentialsId: 'c71bcacf-6b48-4ba3-94a8-e8116a338e47', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
        //             checkout([$class: 'GitSCM',
        //                       branches: [[name: '*/main']],
        //                       userRemoteConfigs: [[
        //                           url: 'https://github.com/azotamiota/dummy-mug.git',
        //                           credentialsId: 'c71bcacf-6b48-4ba3-94a8-e8116a338e47'
        //                       ]]])
        //         }
        //     }
        // }
        stage("Build") {
            steps {
                    sh "echo 'Test text in a txt file' > test.txt"
                script {
                    if(params.TF_APPLY == false) {
                        echo "TF_APPLY is FALSE"
                        currentBuild.result = "SUCCESS"
                        return
                    } else {
                        echo "TF_APPLY is TRUE"
                    }
                }
            }
        }
        stage("Test") {
            steps {
                
                script {
                        if (fileExists('test.txt')) {
                            echo "The file 'test.txt' exists."
                            // Add your test steps here
                        } else {
                            error "The file 'test.txt' does not exist."
                        }
                    }
              
            }
        }
        stage("Complete") {
            steps {
                    sh "echo job done"
            }
        }
    }
}